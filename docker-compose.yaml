# https://www.domysee.com/blogposts/reverse-proxy-nginx-docker-compose
version: '3.4'
services:
  app:
    container_name: ndexr_app
    # build: .
    image: registry.gitlab.com/fdrennan/ndexr:latest
    command: ["R", "-e", "box::use(./functions/main);main$$main()"]
    restart: always
    env_file: .Renviron
    user: 'root'
    ports:
      - '8600:8000'
    expose:
      - '8600'
  selenium:
    container_name: rselenium
    image: selenium/standalone-firefox
    ports:
      - '8601:4444'
  qsci_pgadmin:
    container_name: qsci_pgadmin
    image: dpage/pgadmin4:6.14
    depends_on:
      - qsci_postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=fdrennan@ndexr.com
      - PGADMIN_DEFAULT_PASSWORD=password
    volumes:
       - qsci_pgadmin:/root/.pgadmin
    ports:
      - "8602:80"
    restart: unless-stopped
  qsci_postgres:
    image: postgres:12.3
    container_name: qsci_postgres
    restart: always
    env_file: .Renviron
#    environment:
#      - POSTGRES_USER=${POSTGRES_USER}
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '8603:5432'
    expose:
      - '8603'
    volumes:
      - qsci_postgres:/var/lib/postgresql/data
#    healthcheck:
#        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
#        interval: 30s
#        timeout: 30s
#        retries: 5
  ndexr_glances:
    image: docker.io/nicolargo/glances
    pid: host
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    environment:
      - GLANCES_OPT="-w"
    ports:
      - '61208-61209:61208-61209'
    restart: always
    command: ["glances", "-w"]
volumes:
    qsci_pgadmin:
    qsci_postgres:

  # postgres:
  #   image: postgres:12.3
  #   container_name: "postgres"
  #   restart: always
  #   ports:
  #     - '5432:5432'
  #   expose:
  #     - '5432'
  #   env_file: .Renviron
  #   volumes:
  #     - ndexr_postgres:/var/lib/postgresql/data
  #     - ./volumes/postgres/backups:/data:Z
  #   healthcheck:
  #       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
  #       interval: 30s
  #       timeout: 30s
  #       retries: 5

# volumes:
#   ndexr_postgres: {}
